/* Automatically generated nanopb header */
/* Generated by nanopb-0.2.4-dev at Mon Oct 20 00:05:49 2014. */

#ifndef _PB_NANOPB_PB_H_
#define _PB_NANOPB_PB_H_
#include <pb.h>

#include "protobuf/descriptor.pb.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _FieldType {
    FieldType_FT_DEFAULT = 0,
    FieldType_FT_CALLBACK = 1,
    FieldType_FT_STATIC = 2,
    FieldType_FT_IGNORE = 3
} FieldType;

/* Struct definitions */
typedef struct _NanoPBOptions {
    bool has_max_size;
    int32_t max_size;
    bool has_max_count;
    int32_t max_count;
    bool has_type;
    FieldType type;
    bool has_long_names;
    bool long_names;
    bool has_packed_struct;
    bool packed_struct;
} NanoPBOptions;

/* Extensions */
extern const pb_extension_type_t nanopb_fileopt;
extern const pb_extension_type_t nanopb_msgopt;
extern const pb_extension_type_t nanopb_enumopt;
extern const pb_extension_type_t nanopb;

/* Default values for struct fields */
extern const FieldType NanoPBOptions_type_default;
extern const bool NanoPBOptions_long_names_default;
extern const bool NanoPBOptions_packed_struct_default;

/* Field tags (for use in manual encoding/decoding) */
#define NanoPBOptions_max_size_tag               1
#define NanoPBOptions_max_count_tag              2
#define NanoPBOptions_type_tag                   3
#define NanoPBOptions_long_names_tag             4
#define NanoPBOptions_packed_struct_tag          5

/* Struct field encoding specification for nanopb */
extern const pb_field_t NanoPBOptions_fields[6];

/* Maximum encoded size of messages (where known) */
#define NanoPBOptions_size                       22

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
